{"version":3,"sources":["webpack:///./src/styled-components/about.js","webpack:///./src/pages/about.js","webpack:///./src/components/seo/seo.js"],"names":["SocialLinks","styled","div","About","site","siteMetadata","bio","socials","console","log","title","description","map","social","length","href","url","name","key","lastIndexOf","SEO","lang","meta","metaDescription","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"yWAEO,IAAMA,E,UAAcC,EAAOC,IAAV,KC8CTC,UAvCD,WACZ,IADkB,EACR,OAauCC,KAAzCC,aAAgBC,EAdN,EAcMA,IAAKC,EAdX,EAcWA,QAI7B,OAFAC,QAAQC,IAAIH,EAAKC,GAGf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,QAAQC,YAAY,aAC/B,2BAAIL,GACJ,kBAACN,EAAD,KACGO,EAAQK,KAAI,SAAAC,GACX,OAAuB,IAAnBN,EAAQO,OAAqB,uBAAGC,KAAMF,EAAOG,KAAMH,EAAOI,MAE5D,yBAAKC,IAAKL,EAAOG,KACf,uBAAGD,KAAMF,EAAOG,KAAMH,EAAOI,MAE3BV,EAAQY,YAAYN,GAAU,KAAO,kBAAC,IAAD,c,8FC1BrD,SAASO,EAAT,GAAkD,IAAnCT,EAAkC,EAAlCA,YAAaU,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMZ,EAAS,EAATA,MAC9BN,EADuC,OACvCA,KAcFmB,EAAkBZ,GAAeP,EAAKC,aAAaM,YAEzD,OACE,kBAAC,IAAD,CACEa,eAAgB,CACdH,QAEFX,MAAOA,EACPe,cAAa,QAAUrB,EAAKC,aAAaK,MACzCY,KAAM,CACJ,CACEL,KAAK,cACLS,QAASH,GAEX,CACEI,SAAS,WACTD,QAAShB,GAEX,CACEiB,SAAS,iBACTD,QAASH,GAEX,CACEI,SAAS,UACTD,QAAQ,WAEV,CACET,KAAK,eACLS,QAAQ,WAEV,CACET,KAAK,kBACLS,QAAStB,EAAKC,aAAauB,QAE7B,CACEX,KAAK,gBACLS,QAAShB,GAEX,CACEO,KAAK,sBACLS,QAASH,IAEXM,OAAOP,KAKfF,EAAIU,aAAe,CACjBT,KAAK,KACLC,KAAM,GACNX,YAAY,IAUCS,O","file":"component---src-pages-about-js-f7813cc409e798297cd4.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const SocialLinks = styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n`","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo/seo\"\n\nimport { Divider } from \"../styled-components/index\"\nimport { SocialLinks } from \"../styled-components/about\"\n\nconst About = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          bio\n          socials {\n            name\n            url\n          }\n        }\n      }\n    }\n  `)\n  const { siteMetadata: { bio, socials }  } = data.site;\n\n  console.log(bio, socials)\n\n  return (\n    <Layout>\n      <SEO title=\"About\" description=\"About Me\" />\n      <p>{bio}</p>\n      <SocialLinks>\n        {socials.map(social => {\n          if (socials.length === 1) return <a href={social.url}>{social.name}</a>\n          return (\n            <div key={social.url}>\n              <a href={social.url}>{social.name}</a>\n              {\n                socials.lastIndexOf(social) ? null : <Divider />\n              }\n            </div>\n          )\n        })}\n      </SocialLinks>\n    </Layout>\n  )\n}\n\nexport default About\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}