{"version":3,"sources":["webpack:///./src/components/seo/seo.js","webpack:///./src/pages/index.js"],"names":["SEO","description","lang","meta","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","data","allMarkdownRemark","edges","map","node","key","id","to","fields","slug","frontmatter","Date","date","toDateString","excerpt","query"],"mappings":"uJAYA,SAASA,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EADuC,OACvCA,KAcFC,EAAkBL,GAAeI,EAAKE,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFE,MAAOA,EACPK,cAAa,QAAUJ,EAAKE,aAAaH,MACzCD,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASP,GAEX,CACEQ,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASP,GAEX,CACEM,KAAK,sBACLC,QAASL,IAEXQ,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCCvFf,0GAQe,0BAAGgB,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKZ,MAAM,SAERY,EAAKC,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKC,IAAKD,EAAKE,IACb,kBAAC,IAAD,CAAUC,GAAIH,EAAKI,OAAOC,MACxB,kBAAC,IAAD,KAAYL,EAAKM,YAAYtB,QAE/B,8BAAO,IAAIuB,KAAKP,EAAKM,YAAYE,MAAMC,gBACvC,2BAAIT,EAAKU,eAOZ,IAAMC,EAAK","file":"component---src-pages-index-js-1d1943022bd84aaa6d55.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo/seo\"\n\nimport { BlogLink, BlogTitle } from \"../styled-components/index\"\n\nexport default ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    {\n       data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id}>\n          <BlogLink to={node.fields.slug}>\n            <BlogTitle>{node.frontmatter.title}</BlogTitle>\n          </BlogLink>\n          <time>{new Date(node.frontmatter.date).toDateString()}</time>\n          <p>{node.excerpt}</p>\n        </div>\n      ))\n    }\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          date\n          title\n          description\n        }\n        excerpt\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n`;"],"sourceRoot":""}